; PlatformIO Project Configuration File
;
; Supported platforms for the MobiFlight firmware are:
; atmega2560
; promicro
; uno
;
; Version numbers for releases are automatically applied by GitHub
; during the release build process based on the tag associated with
; the GitHub release.

; To ensure builds work correctly in GitHub the default_envs
; should always be set to all supported MobiFlight platforms.
; If you want to only build a single platform locally during
; development use VSCode to change the target to a non-default
; by clicking on the target name in the bottom status bar.
[platformio]

; Common build settings across all devices
[env]
lib_deps = 
	https://github.com/MobiFlight/LedControl#1.1.0
	waspinator/AccelStepper @ 1.61
	https://github.com/MobiFlight/LiquidCrystal_I2C#v1.1.4
	https://github.com/MobiFlight/Arduino-CmdMessenger#4.2.1
build_flags =
	-DMF_REDUCE_FUNCT_LEDCONTROL
	-DMAXCALLBACKS=30
	-DSERIAL_RX_BUFFER_SIZE=96
	-DMESSENGERBUFFERSIZE=96
	-DMAXSTREAMBUFFERSIZE=96
	-DDEFAULT_TIMEOUT=5000
;	-DDEBUG2CMDMESSENGER=1
	-I./src/MF_Analog
	-I./src/MF_Button
	-I./src/MF_Encoder
	-I./src/MF_InputShifter
	-I./src/MF_DigInMux
	-I./src/MF_LCDDisplay
	-I./src/MF_Output
	-I./src/MF_OutputShifter
	-I./src/MF_Segment
	-I./src/MF_Servo
	-I./src/MF_Stepper
	-I./src/MF_Modules
build_src_filter =
	+<*>
extra_scripts =
	pre:get_version.py

; Build settings for the Arduino Mega
[env:mega]
platform = atmelavr
board = megaatmega2560
framework = arduino
build_flags = 
	${env.build_flags}
	-I./_Boards/Atmel/Board_Mega
build_src_filter = 
	${env.build_src_filter}
	+<../_Boards/Atmel>
lib_deps = 
	${env.lib_deps}
	arduino-libraries/Servo @ 1.1.8
	TimerOne
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

; Build settings for the Arduino Pro Micro
[env:micro]
platform = atmelavr
board = sparkfun_promicro16
framework = arduino
build_flags = 
	${env.build_flags}
	-I./_Boards/Atmel/Board_ProMicro
build_src_filter = 
	${env.build_src_filter}
	+<../_Boards/Atmel>
lib_deps = 
	${env.lib_deps}
	arduino-libraries/Servo @ 1.1.8
	TimerOne
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}


; Build settings for the Arduino Uno
[env:uno]
platform = atmelavr
board = uno
framework = arduino
build_flags = 
	${env.build_flags}
	-I./_Boards/Atmel/Board_Uno
build_src_filter = 
	${env.build_src_filter}
	+<../_Boards/Atmel>
lib_deps = 
	${env.lib_deps}
	arduino-libraries/Servo @ 1.1.8
	TimerOne
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

; Build settings for the Arduino Mini
[env:mini]
platform = atmelavr
board = pro16MHzatmega328
framework = arduino
build_flags = 
	${env.build_flags}
	-I./_Boards/Atmel/Board_Mini
build_src_filter = 
	${env.build_src_filter}
	+<../_Boards/Atmel>
lib_deps = 
	${env.lib_deps}
	arduino-libraries/Servo @ 1.1.8
	TimerOne
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

; Build settings for the Arduino Nano with new Bootloader
[env:nano]
platform = atmelavr
board = nanoatmega328new
framework = arduino
build_flags = 
	${env.build_flags}
	-I./_Boards/Atmel/Board_Nano
build_src_filter = 
	${env.build_src_filter}
	+<../_Boards/Atmel>
lib_deps = 
	${env.lib_deps}
	arduino-libraries/Servo @ 1.1.8
	TimerOne
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

; Build settings for the Arduino Nano with old Bootloader
[env:nano_old]
platform = atmelavr
board = nanoatmega328
framework = arduino
build_flags = 
	${env.build_flags}
	-I./_Boards/Atmel/Board_Nano
build_src_filter = 
	${env.build_src_filter}
	+<../_Boards/Atmel>
lib_deps = 
	${env.lib_deps}
	arduino-libraries/Servo @ 1.1.8
	TimerOne
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

; Build settings for the Raspberry Pico original
[env:raspberrypico]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = pico
framework = arduino
board_build.core = earlephilhower			; select new core
board_build.filesystem_size = 0M			; configure filesystem size. Default 0 Mbyte.
lib_ldf_mode = chain+
upload_protocol = mbed
build_flags =
	${env.build_flags}
	-DUSE_CORE1
	-I./_Boards/RaspberryPi/Pico
	-I./_Boards/RaspberryPi
	-I./MF_TFT_pico
	-fpermissive
	-DUSER_SETUP_LOADED=1
    -DILI9341_DRIVER=1
    ;-DGC9A01_DRIVER=1
    -DTFT_HEIGHT=320
    -DTFT_WIDTH=240
    -DTFT_CS=20
    -DTFT_DC=21
    -DTFT_RST=22
    -DTFT_BL=26
    -DTFT_SCLK=18
    -DTFT_MOSI=19
    -DLOAD_GLCD=1
    -DLOAD_FONT2=1
    -DLOAD_FONT4=1
    -DLOAD_FONT6=1
    -DLOAD_FONT7=1
    -DLOAD_FONT8=1
    -DLOAD_GFXFF=1
    -DSMOOTH_FONT=1
	-DUSE_DMA_TO_TFT
	;-DSPI_FREQUENCY=62500000
	-DSPI_FREQUENCY=66500000
	;-DRP2040_PIO_SPI
build_unflags =
	-Wdeprecated-declarations
;	-Werror=return-type
build_src_filter =
  ${env.build_src_filter}
  +<../_Boards/RaspberryPi>
  +<../MF_TFT_pico>
lib_deps =
	${env.lib_deps}
	https://github.com/Bodmer/TFT_eSPI.git
	;bodmer/TFT_eSPI
  	;bodmer/TJpg_Decoder
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

; Build settings for the Raspberry Pico original
[env:tufty2040]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
board = pico
framework = arduino
board_build.core = earlephilhower			; select new core
board_build.filesystem_size = 0M			; configure filesystem size. Default 0 Mbyte.
lib_ldf_mode = chain+
upload_protocol = mbed
build_flags =
	${env.build_flags}
	-DUSE_CORE1
	-I./_Boards/RaspberryPi
	-I./_Boards/RaspberryPi/Tufty2040
	-I./MF_TFT_pico
	-fpermissive
	-DMF_SERVO_SUPPORT=0	; 8bit parallel interface for display uses PIO, no servo support possible
	-DUSER_SETUP_LOADED=1
    -DST7789_DRIVER=1
    -DTFT_HEIGHT=320
    -DTFT_WIDTH=240
	-DTFT_BL=2
	-DTFT_BACKLIGHT_ON=HIGH
	-DTFT_RGB_ORDER=0		; to get the same colours as ILI9341, w/o this or setting to 1 it's RGB
	-DTFT_PARALLEL_8_BIT
	-DRP2040_PIO_CLK_DIV=2	; slow down PIO clock frequency at least for ST7789 in 8bit parallel mode
    -DTFT_CS=10
    -DTFT_DC=11
	-DTFT_WR=12
	-DTFT_RD=13
	-DTFT_D0=14
	-DTFT_D1=15
	-DTFT_D2=16
	-DTFT_D3=17
	-DTFT_D4=18
	-DTFT_D5=19
	-DTFT_D6=20
	-DTFT_D7=21
    -DLOAD_GLCD=1
    -DLOAD_FONT2=1
    -DLOAD_FONT4=1
    -DLOAD_FONT6=1
    -DLOAD_FONT7=1
    -DLOAD_FONT8=1
    -DLOAD_GFXFF=1
    -DSMOOTH_FONT=1
	-DUSE_DMA_TO_TFT
	;-DRP2040_PIO_SPI
build_unflags =
	-Wdeprecated-declarations
;	-Werror=return-type
build_src_filter =
  ${env.build_src_filter}
  +<../_Boards/RaspberryPi>
  +<../MF_TFT_pico>
lib_deps =
	${env.lib_deps}
	;https://github.com/Bodmer/TFT_eSPI.git
	https://github.com/elral/TFT_eSPI.git
	;bodmer/TFT_eSPI
  	;bodmer/TJpg_Decoder
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}


; Build settings for the Teensy 4.1
[env:teensy41]
platform = teensy
board = teensy41
framework = arduino
build_flags =
	-DUSB_SERIAL_HID
	;  -DUSB_SERIAL   ; if HID is not used
	-DUSE_INTERRUPT
	${env.build_flags}
	-I./_Boards/Teensy35_41/Board_Teensy41
build_src_filter =
  ${env.build_src_filter}
  +<../_Boards/Teensy35_41>
lib_deps =
 	${env.lib_deps}
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}

; Build settings for the Teensy 3.5
[env:teensy35]
platform = teensy
board = teensy35
framework = arduino
build_flags =
	-DUSB_SERIAL_HID
	;  -DUSB_SERIAL   ; if HID is not used
	-DUSE_INTERRUPT
	${env.build_flags}
	-I./_Boards/Teensy35_41/Board_Teensy35
build_src_filter =
	${env.build_src_filter}
	+<../_Boards/Teensy35_41>
lib_deps =
 	${env.lib_deps}
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}


[env:esp32s3]
platform = espressif32
board = esp32-s3-devkitc-1
framework = arduino
platform_packages =
    framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git
build_flags =
	${env.build_flags}
	-I./_Boards/ESP32/ESP32S3_Devkit
	-I./MF_TFT_LilyGo
	-I./_Boards/ESP32
	-DARDUINO_USB_MODE=1
    -DARDUINO_USB_CDC_ON_BOOT=1
    -DBOARD_HAS_PSRAM
	-DUSE_CORE0
	-DMF_SEGMENT_SUPPORT=0
	-DMF_STEPPER_SUPPORT=0
	-DMF_SERVO_SUPPORT=0
	-DMF_ANALOG_SUPPORT=0
	-DMF_OUTPUT_SHIFTER_SUPPORT=0
	-DMF_INPUT_SHIFTER_SUPPORT=0
	-DMF_MUX_SUPPORT=0
	-DMF_DIGIN_MUX_SUPPORT=0
build_unflags =
  -Wdeprecated-declarations
  -fpermissive
;  -Werror=return-type
build_src_filter =
  ${env.build_src_filter}
  +<../_Boards/ESP32>
  +<../MF_TFT_LilyGo>
lib_deps =
	${env.lib_deps}
	Wire
	madhephaestus/ESP32Servo
	moononournation/GFX Library for Arduino
board_build.arduino.memory_type = qio_opi
board_build.memory_type = qio_opi
monitor_speed = 115200
extra_scripts = 
	${env.extra_scripts}
